<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
        http://www.springframework.org/schema/integration/jms
        http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd"
	xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int="http://www.springframework.org/schema/integration">
	
	<!-- 
	   Required, because by default spring boot creates 'jmsConnectionFactory'
	   but spring integration searches for 'connectionFactory'
	-->
	<alias name="jmsConnectionFactory" alias="connectionFactory"/>
        
    <!-- Payment flow -->
    <int:channel id="payment.in"/>
    <int:channel id="payment.out"/>
    
    <int:chain 
        id="paymentFlow"
        output-channel="payment.out"
        input-channel="payment.in">
        
        <int:object-to-json-transformer/>
        
        <int-jms:outbound-gateway 
            correlation-key="auctionCoId"            
            request-pub-sub-domain="false"
            request-destination-name="jms.payment.in"             
            reply-destination-name="jms.payment.out"
            reply-pub-sub-domain="true"/>
            
        <int:json-to-object-transformer type="adamd.domain.payment.Receipt"/>
    </int:chain>
    
    <int-jms:message-driven-channel-adapter 
        id="paymentGateway"
        destination-name="jms.payment.in"
        channel="gateway.payment.in"/>
        
    <int:channel id="gateway.payment.in"/>
    
    <int:chain 
        id="paymentGatewayFlow"
        input-channel="gateway.payment.in">
        
        <int:json-to-object-transformer type="adamd.domain.payment.Payment"/>
        
        <int:service-activator requires-reply="true" method="pay">
            <bean id="paymentService" class="adamd.domain.payment.PaymentService"/>
        </int:service-activator>
            
        <int:object-to-json-transformer/>
        
        <int-jms:outbound-channel-adapter 
            destination-name ="jms.payment.out"/>
    </int:chain>
    
    <!-- Auction flow -->    
    <int:channel id="auction.in"/>
    <int:channel id="auction.out"/>

    <int:gateway id="auctionFlowGateway"
    	service-interface="adamd.integration.AuctionFlowGateway"
    	default-request-channel="auction.in"
    	default-reply-channel="auction.out" 
    	error-channel="errorLogger">	
        <int:method name="buy" payload-expression="#args[1]">
            <int:header name="secToken" expression="#args[0]" />
        </int:method>
    </int:gateway>

    <int:chain 
        id="auctionFlow"
        output-channel="auction.out"
        input-channel="auction.in">
        
        <int:enricher 
            request-channel="payment.in" 
            reply-channel="payment.out"
            request-payload-expression="new adamd.domain.payment.Payment(payload.getCost())">
            <int:header name="receipt" expression="payload"/>
        </int:enricher>
        
        <int:object-to-json-transformer/>
    
	    <int-jms:outbound-gateway 
            correlation-key="auctionCoId"            
            request-pub-sub-domain="false"
            request-destination-name="jms.bid.in"             
            reply-destination-name="jms.bid.out"
            reply-pub-sub-domain="true"/>
            
	    <int:json-to-object-transformer type="adamd.domain.bid.BidReciept"/> 
	   
	    <int:transformer expression="new adamd.domain.bid.BidReciept(
	       T(java.util.UUID).randomUUID().toString(),
	       payload.itemName, 
	       headers['receipt'])"/>	    
    </int:chain>
    
    <!-- Auction Bid flow -->
    
    <int-jms:message-driven-channel-adapter 
        id="bidGateway"
        destination-name="jms.bid.in"
        channel="gateway.bid.in"/>
        
    <int:channel id="gateway.bid.in"/>
    
    <int:chain
        id="bidFlow"
        input-channel="gateway.bid.in">
        
        <int:json-to-object-transformer type="adamd.domain.bid.Bid"/>
        
        <int:service-activator requires-reply="true" method="bid">
            <bean id="auctionService" class="adamd.domain.bid.AuctionService"/>
        </int:service-activator>
            
        <int:object-to-json-transformer/>
        
        <int-jms:outbound-channel-adapter 
            destination-name="jms.bid.out"/>
    </int:chain>
            
  <!-- Ops -->
    
    <int:wire-tap 
        pattern="*" 
        order="0" 
        channel="logger" 
        id="wireTap"/>
        
    <int:logging-channel-adapter 
       id="logger" 
       level="INFO"
       log-full-message="true"
       logger-name="WIRETAP"/>
       
    <int:logging-channel-adapter 
       id="errorLogger" 
       level="ERROR"
       log-full-message="true"
       logger-name="ERROR"/>
</beans>
